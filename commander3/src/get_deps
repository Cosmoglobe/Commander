#!/bin/bash
#  Usage:
# ./get_deps *.f90 *.f90.in > deps.txt
# Import deps.txt into Makefile

declare -A blacklist

declare -A srcs_lower
for srcfile in "$@"; do
	srcs_lower[${srcfile,,}]=$srcfile
done

for srcfile in "$@"; do
	objfile="${srcfile%%.*}.o"
	declare -A seen
	used=($(grep '^\s*use ' "$srcfile" | while read line; do
		toks=($line)
		dep=${toks[1]}
		echo ${dep,,}
	done))
	used+=($(grep '^\s*submodule' "$srcfile" | while read line; do
		if [[ $line =~ submodule\ *\(([^ ]*)\) ]]; then
			dep=${BASH_REMATCH[1]}
			echo ${dep,,}
		fi
	done))
	deps=($(for dep in "${used[@]}"; do
		if [[ ${seen[$dep]} ]]; then continue; fi
		if [[ ! ${srcs_lower[$dep.f90]} && ! ${srcs_lower[$dep.f90.in]} ]]; then continue; fi
		#if [[ ! -f "$dep.f90" && ! -f "$dep.f90.in" ]]; then continue; fi
		seen[$dep]=1
		# Would ideally just output $dep.o, but need to make sure we get the case on disk right
		k=${srcs_lower[$dep.f90]}
		if [[ $k ]]; then
			odep=${k/.f90/}
		else
			k=${srcs_lower[$dep.f90.in}
			odep=${k/.f90.in/}
		fi
		echo $odep.o
	done))
	#echo "$objfile : ${deps[@]}"
	if (( ${#deps[@]} > 0 )); then
		echo "$(printf "%-27s" $objfile) : ${deps[@]}"
	fi
done
