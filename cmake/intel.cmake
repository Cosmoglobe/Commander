# This file for Intel compilers
# Intel reference guide:
# https://software.intel.com/content/dam/develop/public/us/en/documents/quick-reference-guide-intel-compilers-v19-1-final-.pdf
# https://software.intel.com/content/www/us/en/develop/download/quick-reference-guide-to-optimization-with-intel-compilers-v19.html
# Useful resources:
# https://www.bu.edu/tech/support/research/software-and-programming/programming/compilers/intel-compiler-flags/


# Type in the command line:
# $ man ifort
# To see the Fortran reference guide

# the `man ifort` for Intel 2020 gives us:
#
# Options that Improve Run-Time Performance
#		The  following  command  line  options can be used to increase the run-time performance 
#   of code generated by the Intel(R) Fortran Compiler:
#
#		On systems  using  IA-32  architecture  and  systems  using  Intel(R)  64  architecture:
#		-ax<processor>, -ftz, -ip, -ipo, -march=<processor>, -mtune=<processor>, -O[n], -openmp,
#		-parallel, -prof-gen, -prof-use, -x<processor>.
#
# -Ofast -- sets compiler options -O3, -no-prec-div, and -fp-model fast=2.
# -xhost -- 
# -ip    -- Single file interprocedural optimizations, including selective inlining, within the current source file. 
# -fast  -- maximizes speed across the entire program. Sets the following options:
#		On macOS* systems: -ipo, -mdynamic-no-pic,-O3, -no-prec-div,-fp-model fast=2, and -xHost
#		On Windows* systems: /O3, /Qipo, /Qprec-div-, /fp:fast=2, and /QxHost
#		On Linux* systems: -ipo, -O3, -no-prec-div,-static, -fp-model fast=2, and -xHost
# -q[no-]opt-matmul -- Enables or disables a compiler-generated Matrix Multiply (matmul) library call. This option is enabled by  default  at  setting  O2  and  above.
